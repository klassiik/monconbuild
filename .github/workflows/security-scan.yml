name: Security Scan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

jobs:
  npm-audit:
    name: NPM Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
          
      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci
        
      - name: Run npm audit
        working-directory: ./frontend
        run: |
          npm audit --audit-level=moderate
          echo "NPM_AUDIT_EXIT_CODE=$?" >> $GITHUB_ENV
        continue-on-error: true
        
      - name: Generate npm audit report
        working-directory: ./frontend
        run: npm audit --json > npm-audit-report.json
        continue-on-error: true
        
      - name: Upload npm audit report
        uses: actions/upload-artifact@v5
        with:
          name: npm-audit-report
          path: frontend/npm-audit-report.json
          retention-days: 30

  python-security:
    name: Python Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: backend/requirements.txt
          
      - name: Install dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install safety bandit pip-audit
          
      - name: Run Safety check
        working-directory: ./backend
        run: |
          safety check --json > safety-report.json
          echo "SAFETY_EXIT_CODE=$?" >> $GITHUB_ENV
        continue-on-error: true
        
      - name: Run Bandit security scan
        working-directory: ./backend
        run: |
          bandit -r . -f json -o bandit-report.json
          bandit -r . -f txt
        continue-on-error: true
        
      - name: Run pip-audit
        working-directory: ./backend
        run: |
          pip-audit --format json > pip-audit-report.json
          echo "PIP_AUDIT_EXIT_CODE=$?" >> $GITHUB_ENV
        continue-on-error: true
        
      - name: Upload Python security reports
        uses: actions/upload-artifact@v5
        with:
          name: python-security-reports
          path: |
            backend/safety-report.json
            backend/bandit-report.json
            backend/pip-audit-report.json
          retention-days: 30

  codeql-analysis:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript, python
          queries: security-and-quality
          
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3
          
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:javascript,python"

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: high
          allow-licenses: MIT, Apache-2.0, BSD-3-Clause, BSD-2-Clause, ISC

  ssl-check:
    name: SSL Certificate & Headers Check
    runs-on: ubuntu-latest
    if: false  # Disabled - headers are configured in Vercel
    steps:
      - name: Check SSL certificate validity
        run: |
          echo "Checking SSL certificate..."
          echo | openssl s_client -connect www.monconbuild.com:443 -servername www.monconbuild.com 2>/dev/null | openssl x509 -noout -dates -subject -issuer
          
      - name: Check HTTPS redirect
        run: |
          echo "Checking HTTPS redirect..."
          curl -sI http://www.monconbuild.com | grep -i "location: https"
        continue-on-error: true
          
      - name: Check security headers
        run: |
          echo "Checking security headers..."
          curl -sI https://www.monconbuild.com | grep -E "Strict-Transport-Security|X-Frame-Options|X-Content-Type-Options|Content-Security-Policy|X-XSS-Protection|Referrer-Policy"
        continue-on-error: true
          
      - name: Verify required headers present
        run: |
          HEADERS=$(curl -sI https://www.monconbuild.com)
          
          # Check for each required header
          if echo "$HEADERS" | grep -q "Strict-Transport-Security"; then
            echo "✓ HSTS header found"
          else
            echo "✗ HSTS header missing"
          fi
          
          if echo "$HEADERS" | grep -q "X-Frame-Options"; then
            echo "✓ X-Frame-Options header found"
          else
            echo "✗ X-Frame-Options header missing"
          fi
          
          if echo "$HEADERS" | grep -q "X-Content-Type-Options"; then
            echo "✓ X-Content-Type-Options header found"
          else
            echo "✗ X-Content-Type-Options header missing"
          fi
        continue-on-error: true

  owasp-zap-scan:
    name: OWASP ZAP Baseline Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.12.0
        with:
          target: 'https://www.monconbuild.com'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'
          allow_issue_writing: true
          fail_action: false
          
      - name: Upload ZAP scan results
        uses: actions/upload-artifact@v5
        with:
          name: zap-scan-results
          path: |
            report_html.html
            report_md.md
          retention-days: 30

  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [npm-audit, python-security, codeql-analysis]
    if: always()
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Generate security summary
        run: |
          echo "# Security Scan Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # NPM Audit
          if [ -f npm-audit-report/npm-audit-report.json ]; then
            VULN_COUNT=$(jq '.metadata.vulnerabilities | to_entries | map(.value) | add' npm-audit-report/npm-audit-report.json)
            echo "### 📦 NPM Audit" >> $GITHUB_STEP_SUMMARY
            echo "Total vulnerabilities: $VULN_COUNT" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Python Security
          echo "### 🐍 Python Security" >> $GITHUB_STEP_SUMMARY
          echo "- Safety scan: Completed" >> $GITHUB_STEP_SUMMARY
          echo "- Bandit scan: Completed" >> $GITHUB_STEP_SUMMARY
          echo "- pip-audit: Completed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # CodeQL
          echo "### 🔍 CodeQL Analysis" >> $GITHUB_STEP_SUMMARY
          echo "- Status: ${{ needs.codeql-analysis.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # SSL
          echo "### 🔒 SSL/TLS Check" >> $GITHUB_STEP_SUMMARY
          echo "- Status: ${{ needs.ssl-check.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "---" >> $GITHUB_STEP_SUMMARY
          echo "Scan completed at: $(date)" >> $GITHUB_STEP_SUMMARY
